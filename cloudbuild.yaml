steps:
  # Build the Spring Boot application using buildpacks
  - name: 'gcr.io/k8s-skaffold/pack'
    entrypoint: 'pack'
    args:
      - 'build'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--builder=gcr.io/buildpacks/builder:v1'
      - '--path=backend/complete'
      - '--env=GOOGLE_RUNTIME_VERSION=17'

  # Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--image=${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region=${_DEPLOY_REGION}'
      - '--allow-unauthenticated'
      - '--set-env-vars=PORT=8080,SPRING_PROFILES_ACTIVE=development'
      - '--port=8080'
      - '--timeout=900'
      - '--memory=1Gi'
      - '--cpu=1'

# Specify which image will be pushed to registry
images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

# Build options
options:
  substitutionOption: ALLOW_LOOSE
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100